language: python
python:
  - "2.7"
  - "3.4"
  - "3.5"
  - "3.6"

# Setup anaconda
before_install:
  # http://conda.pydata.org/docs/travis.html
  - sudo apt-get update
  - if [[ "$TRAVIS_PYTHON_VERSION" == "2.7" ]]; then
      travis_retry wget https://repo.continuum.io/miniconda/Miniconda2-latest-Linux-x86_64.sh -O miniconda.sh;
    else
      travis_retry wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh;
    fi
  - bash miniconda.sh -b -p $HOME/miniconda
  - export PATH="$HOME/miniconda/bin:$PATH"
  - hash -r
  - conda config --set always_yes yes --set changeps1 no
  - conda update -q conda
  - conda info -a

install:
  - conda create -q -n test-environment python=$TRAVIS_PYTHON_VERSION
  - source activate test-environment
  - travis_retry conda install -c conda-forge pytables --yes
  # - python setup.py install
  - travis_retry pip install -r requirements.txt

  # Testing requirements
  - travis_retry pip install -r test_requirements.txt

  # Setup PyAstronomy folder
  - echo -n $HOME/PyAData > $HOME/.pyaConfigWhere
  - mkdir $HOME/PyAData

  # Remove futures for python 3
  - if [[ "$TRAVIS_PYTHON_VERSION" == 3* ]]; then
      travis_retry pip uninstall futures -y;
    fi

before_script:
  # Pre-download the PyAData.
  - travis_retry python -c "from PyAstronomy.pyasl import ExoplanetEU2; ExoplanetEU2()"
  - cd sweetercat

script:
  - pytest --cov=. --cov-report term-missing --durations 5

after_success:
  - coveralls -i
  - coverage xml -i
  - python-codacy-coverage -r coverage.xml
